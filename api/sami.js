
window.projectVersion = 'master';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:ActiveRecord" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="ActiveRecord.html">ActiveRecord</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:ActiveRecord_AbstractRelationship" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/AbstractRelationship.html">AbstractRelationship</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_ActiveRecordException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/ActiveRecordException.html">ActiveRecordException</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_ArraySerializer" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/ArraySerializer.html">ArraySerializer</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_BelongsTo" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/BelongsTo.html">BelongsTo</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Cache" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Cache.html">Cache</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_CacheException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/CacheException.html">CacheException</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_CallBack" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/CallBack.html">CallBack</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Column" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Column.html">Column</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Config" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Config.html">Config</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_ConfigException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/ConfigException.html">ConfigException</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Connection" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Connection.html">Connection</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_ConnectionManager" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/ConnectionManager.html">ConnectionManager</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_CsvSerializer" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/CsvSerializer.html">CsvSerializer</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_DatabaseException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/DatabaseException.html">DatabaseException</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_DateTime" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/DateTime.html">DateTime</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_DateTimeInterface" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/DateTimeInterface.html">DateTimeInterface</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Errors" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Errors.html">Errors</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Expressions" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Expressions.html">Expressions</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_ExpressionsException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/ExpressionsException.html">ExpressionsException</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_HasAndBelongsToMany" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/HasAndBelongsToMany.html">HasAndBelongsToMany</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_HasMany" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/HasMany.html">HasMany</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_HasManyThroughAssociationException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/HasManyThroughAssociationException.html">HasManyThroughAssociationException</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_HasOne" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/HasOne.html">HasOne</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Inflector" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Inflector.html">Inflector</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_InterfaceRelationship" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/InterfaceRelationship.html">InterfaceRelationship</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_JsonSerializer" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/JsonSerializer.html">JsonSerializer</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Model" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Model.html">Model</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_ModelException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/ModelException.html">ModelException</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_MysqlAdapter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/MysqlAdapter.html">MysqlAdapter</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_OciAdapter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/OciAdapter.html">OciAdapter</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_PgsqlAdapter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/PgsqlAdapter.html">PgsqlAdapter</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_ReadOnlyException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/ReadOnlyException.html">ReadOnlyException</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_RecordNotFound" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/RecordNotFound.html">RecordNotFound</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Reflections" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Reflections.html">Reflections</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_RelationshipException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/RelationshipException.html">RelationshipException</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_SQLBuilder" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/SQLBuilder.html">SQLBuilder</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Serialization" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Serialization.html">Serialization</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Singleton" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Singleton.html">Singleton</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_SqliteAdapter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/SqliteAdapter.html">SqliteAdapter</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_StandardInflector" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/StandardInflector.html">StandardInflector</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Table" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Table.html">Table</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_UndefinedPropertyException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/UndefinedPropertyException.html">UndefinedPropertyException</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Utils" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Utils.html">Utils</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_Validations" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/Validations.html">Validations</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_ValidationsArgumentError" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/ValidationsArgumentError.html">ValidationsArgumentError</a>                    </div>                </li>                            <li data-name="class:ActiveRecord_XmlSerializer" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="ActiveRecord/XmlSerializer.html">XmlSerializer</a>                    </div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "ActiveRecord.html", "name": "ActiveRecord", "doc": "Namespace ActiveRecord"},
            {"type": "Interface", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/DateTimeInterface.html", "name": "ActiveRecord\\DateTimeInterface", "doc": "&quot;Interface for the ActiveRecord\\DateTime class so that ActiveRecord\\Model-&gt;assign_attribute() will\nknow to call attribute_of() on passed values. This is so the DateTime object can flag the model\nas dirty via $model-&gt;flag_dirty() when one of its setters is called.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\DateTimeInterface", "fromLink": "ActiveRecord/DateTimeInterface.html", "link": "ActiveRecord/DateTimeInterface.html#method_attribute_of", "name": "ActiveRecord\\DateTimeInterface::attribute_of", "doc": "&quot;Indicates this object is an attribute of the specified model, with the given attribute name.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTimeInterface", "fromLink": "ActiveRecord/DateTimeInterface.html", "link": "ActiveRecord/DateTimeInterface.html#method_format", "name": "ActiveRecord\\DateTimeInterface::format", "doc": "&quot;Formats the DateTime to the specified format.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTimeInterface", "fromLink": "ActiveRecord/DateTimeInterface.html", "link": "ActiveRecord/DateTimeInterface.html#method_createFromFormat", "name": "ActiveRecord\\DateTimeInterface::createFromFormat", "doc": "&quot;See http:\/\/php.net\/manual\/en\/datetime.createfromformat.php&quot;"},
            
            {"type": "Interface", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/InterfaceRelationship.html", "name": "ActiveRecord\\InterfaceRelationship", "doc": "&quot;Interface for a table relationship.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\InterfaceRelationship", "fromLink": "ActiveRecord/InterfaceRelationship.html", "link": "ActiveRecord/InterfaceRelationship.html#method___construct", "name": "ActiveRecord\\InterfaceRelationship::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\InterfaceRelationship", "fromLink": "ActiveRecord/InterfaceRelationship.html", "link": "ActiveRecord/InterfaceRelationship.html#method_build_association", "name": "ActiveRecord\\InterfaceRelationship::build_association", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\InterfaceRelationship", "fromLink": "ActiveRecord/InterfaceRelationship.html", "link": "ActiveRecord/InterfaceRelationship.html#method_create_association", "name": "ActiveRecord\\InterfaceRelationship::create_association", "doc": "&quot;&quot;"},
            
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/AbstractRelationship.html", "name": "ActiveRecord\\AbstractRelationship", "doc": "&quot;Abstract class that all relationships must extend from.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method___construct", "name": "ActiveRecord\\AbstractRelationship::__construct", "doc": "&quot;Constructs a relationship.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_get_table", "name": "ActiveRecord\\AbstractRelationship::get_table", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_is_poly", "name": "ActiveRecord\\AbstractRelationship::is_poly", "doc": "&quot;What is this relationship&#039;s cardinality?&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_query_and_attach_related_models_eagerly", "name": "ActiveRecord\\AbstractRelationship::query_and_attach_related_models_eagerly", "doc": "&quot;Eagerly loads relationships for $models.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_build_association", "name": "ActiveRecord\\AbstractRelationship::build_association", "doc": "&quot;Creates a new instance of specified {@link Model} with the attributes pre-loaded.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_create_association", "name": "ActiveRecord\\AbstractRelationship::create_association", "doc": "&quot;Creates a new instance of {@link Model} and invokes save.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_append_record_to_associate", "name": "ActiveRecord\\AbstractRelationship::append_record_to_associate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_merge_association_options", "name": "ActiveRecord\\AbstractRelationship::merge_association_options", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_unset_non_finder_options", "name": "ActiveRecord\\AbstractRelationship::unset_non_finder_options", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_set_inferred_class_name", "name": "ActiveRecord\\AbstractRelationship::set_inferred_class_name", "doc": "&quot;Infers the $this-&gt;class_name based on $this-&gt;attribute_name.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_set_class_name", "name": "ActiveRecord\\AbstractRelationship::set_class_name", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_create_conditions_from_keys", "name": "ActiveRecord\\AbstractRelationship::create_conditions_from_keys", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_construct_inner_join_sql", "name": "ActiveRecord\\AbstractRelationship::construct_inner_join_sql", "doc": "&quot;Creates INNER JOIN SQL for associations.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\AbstractRelationship", "fromLink": "ActiveRecord/AbstractRelationship.html", "link": "ActiveRecord/AbstractRelationship.html#method_load", "name": "ActiveRecord\\AbstractRelationship::load", "doc": "&quot;This will load the related model data.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/ActiveRecordException.html", "name": "ActiveRecord\\ActiveRecordException", "doc": "&quot;Generic base exception for all ActiveRecord specific errors.&quot;"},
                    
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/ArraySerializer.html", "name": "ActiveRecord\\ArraySerializer", "doc": "&quot;Array serializer.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\ArraySerializer", "fromLink": "ActiveRecord/ArraySerializer.html", "link": "ActiveRecord/ArraySerializer.html#method_to_s", "name": "ActiveRecord\\ArraySerializer::to_s", "doc": "&quot;Performs the serialization.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/BelongsTo.html", "name": "ActiveRecord\\BelongsTo", "doc": "&quot;Belongs to relationship.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\BelongsTo", "fromLink": "ActiveRecord/BelongsTo.html", "link": "ActiveRecord/BelongsTo.html#method___construct", "name": "ActiveRecord\\BelongsTo::__construct", "doc": "&quot;Constructs a relationship.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\BelongsTo", "fromLink": "ActiveRecord/BelongsTo.html", "link": "ActiveRecord/BelongsTo.html#method___get", "name": "ActiveRecord\\BelongsTo::__get", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\BelongsTo", "fromLink": "ActiveRecord/BelongsTo.html", "link": "ActiveRecord/BelongsTo.html#method_load", "name": "ActiveRecord\\BelongsTo::load", "doc": "&quot;This will load the related model data.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\BelongsTo", "fromLink": "ActiveRecord/BelongsTo.html", "link": "ActiveRecord/BelongsTo.html#method_load_eagerly", "name": "ActiveRecord\\BelongsTo::load_eagerly", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Cache.html", "name": "ActiveRecord\\Cache", "doc": "&quot;Cache::get(&#039;the-cache-key&#039;, function() {\n # this gets executed when cache is stale\n return \&quot;your cacheable datas\&quot;;\n});&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Cache", "fromLink": "ActiveRecord/Cache.html", "link": "ActiveRecord/Cache.html#method_initialize", "name": "ActiveRecord\\Cache::initialize", "doc": "&quot;Initializes the cache.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Cache", "fromLink": "ActiveRecord/Cache.html", "link": "ActiveRecord/Cache.html#method_flush", "name": "ActiveRecord\\Cache::flush", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Cache", "fromLink": "ActiveRecord/Cache.html", "link": "ActiveRecord/Cache.html#method_get", "name": "ActiveRecord\\Cache::get", "doc": "&quot;Attempt to retrieve a value from cache using a key. If the value is not found, then the closure method\nwill be invoked, and the result will be stored in cache using that key.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Cache", "fromLink": "ActiveRecord/Cache.html", "link": "ActiveRecord/Cache.html#method_set", "name": "ActiveRecord\\Cache::set", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Cache", "fromLink": "ActiveRecord/Cache.html", "link": "ActiveRecord/Cache.html#method_delete", "name": "ActiveRecord\\Cache::delete", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/CacheException.html", "name": "ActiveRecord\\CacheException", "doc": "&quot;Thrown for cache problems.&quot;"},
                    
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/CallBack.html", "name": "ActiveRecord\\CallBack", "doc": "&quot;Callbacks allow the programmer to hook into the life cycle of a {@link Model}.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\CallBack", "fromLink": "ActiveRecord/CallBack.html", "link": "ActiveRecord/CallBack.html#method___construct", "name": "ActiveRecord\\CallBack::__construct", "doc": "&quot;Creates a CallBack.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\CallBack", "fromLink": "ActiveRecord/CallBack.html", "link": "ActiveRecord/CallBack.html#method_get_callbacks", "name": "ActiveRecord\\CallBack::get_callbacks", "doc": "&quot;Returns all the callbacks registered for a callback type.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\CallBack", "fromLink": "ActiveRecord/CallBack.html", "link": "ActiveRecord/CallBack.html#method_invoke", "name": "ActiveRecord\\CallBack::invoke", "doc": "&quot;Invokes a callback.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\CallBack", "fromLink": "ActiveRecord/CallBack.html", "link": "ActiveRecord/CallBack.html#method_register", "name": "ActiveRecord\\CallBack::register", "doc": "&quot;Register a new callback.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Column.html", "name": "ActiveRecord\\Column", "doc": "&quot;Class for a table column.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Column", "fromLink": "ActiveRecord/Column.html", "link": "ActiveRecord/Column.html#method_castIntegerSafely", "name": "ActiveRecord\\Column::castIntegerSafely", "doc": "&quot;Cast a value to an integer type safely&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Column", "fromLink": "ActiveRecord/Column.html", "link": "ActiveRecord/Column.html#method_cast", "name": "ActiveRecord\\Column::cast", "doc": "&quot;Casts a value to the column&#039;s type.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Column", "fromLink": "ActiveRecord/Column.html", "link": "ActiveRecord/Column.html#method_map_raw_type", "name": "ActiveRecord\\Column::map_raw_type", "doc": "&quot;Sets the $type member variable.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Config.html", "name": "ActiveRecord\\Config", "doc": "&quot;Manages configuration options for ActiveRecord.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_initialize", "name": "ActiveRecord\\Config::initialize", "doc": "&quot;Allows config initialization using a closure.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_set_connections", "name": "ActiveRecord\\Config::set_connections", "doc": "&quot;Sets the list of database connection strings.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_get_connections", "name": "ActiveRecord\\Config::get_connections", "doc": "&quot;Returns the connection strings array.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_get_connection", "name": "ActiveRecord\\Config::get_connection", "doc": "&quot;Returns a connection string if found otherwise null.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_get_default_connection_string", "name": "ActiveRecord\\Config::get_default_connection_string", "doc": "&quot;Returns the default connection string or null if there is none.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_get_default_connection", "name": "ActiveRecord\\Config::get_default_connection", "doc": "&quot;Returns the name of the default connection.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_set_default_connection", "name": "ActiveRecord\\Config::set_default_connection", "doc": "&quot;Set the name of the default connection.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_set_model_directory", "name": "ActiveRecord\\Config::set_model_directory", "doc": "&quot;Sets the directory where models are located.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_get_model_directory", "name": "ActiveRecord\\Config::get_model_directory", "doc": "&quot;Returns the model directory.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_set_logging", "name": "ActiveRecord\\Config::set_logging", "doc": "&quot;Turn on\/off logging&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_set_logger", "name": "ActiveRecord\\Config::set_logger", "doc": "&quot;Sets the logger object for future SQL logging&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_get_logging", "name": "ActiveRecord\\Config::get_logging", "doc": "&quot;Return whether or not logging is on&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_get_logger", "name": "ActiveRecord\\Config::get_logger", "doc": "&quot;Returns the logger&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_set_date_class", "name": "ActiveRecord\\Config::set_date_class", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_get_date_class", "name": "ActiveRecord\\Config::get_date_class", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_get_date_format", "name": "ActiveRecord\\Config::get_date_format", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_set_date_format", "name": "ActiveRecord\\Config::set_date_format", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Config", "fromLink": "ActiveRecord/Config.html", "link": "ActiveRecord/Config.html#method_set_cache", "name": "ActiveRecord\\Config::set_cache", "doc": "&quot;Sets the url for the cache server to enable query caching.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/ConfigException.html", "name": "ActiveRecord\\ConfigException", "doc": "&quot;Thrown for configuration problems.&quot;"},
                    
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Connection.html", "name": "ActiveRecord\\Connection", "doc": "&quot;The base class for database connection adapters.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_instance", "name": "ActiveRecord\\Connection::instance", "doc": "&quot;Retrieve a database connection.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_parse_connection_url", "name": "ActiveRecord\\Connection::parse_connection_url", "doc": "&quot;Use this for any adapters that can take connection info in the form below\nto set the adapters connection info.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method___construct", "name": "ActiveRecord\\Connection::__construct", "doc": "&quot;Class Connection is a singleton. Access it via instance().&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_columns", "name": "ActiveRecord\\Connection::columns", "doc": "&quot;Retrieves column meta data for the specified table.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_escape", "name": "ActiveRecord\\Connection::escape", "doc": "&quot;Escapes quotes in a string.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_insert_id", "name": "ActiveRecord\\Connection::insert_id", "doc": "&quot;Retrieve the insert id of the last model saved.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_query", "name": "ActiveRecord\\Connection::query", "doc": "&quot;Execute a raw SQL query on the database.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_query_and_fetch_one", "name": "ActiveRecord\\Connection::query_and_fetch_one", "doc": "&quot;Execute a query that returns maximum of one row with one field and return it.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_query_and_fetch", "name": "ActiveRecord\\Connection::query_and_fetch", "doc": "&quot;Execute a raw SQL query and fetch the results.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_tables", "name": "ActiveRecord\\Connection::tables", "doc": "&quot;Returns all tables for the current database.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_transaction", "name": "ActiveRecord\\Connection::transaction", "doc": "&quot;Starts a transaction.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_commit", "name": "ActiveRecord\\Connection::commit", "doc": "&quot;Commits the current transaction.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_rollback", "name": "ActiveRecord\\Connection::rollback", "doc": "&quot;Rollback a transaction.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_supports_sequences", "name": "ActiveRecord\\Connection::supports_sequences", "doc": "&quot;Tells you if this adapter supports sequences or not.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_get_sequence_name", "name": "ActiveRecord\\Connection::get_sequence_name", "doc": "&quot;Return a default sequence name for the specified table.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_next_sequence_value", "name": "ActiveRecord\\Connection::next_sequence_value", "doc": "&quot;Return SQL for getting the next value in a sequence.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_quote_name", "name": "ActiveRecord\\Connection::quote_name", "doc": "&quot;Quote a name like table names and field names.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_date_to_string", "name": "ActiveRecord\\Connection::date_to_string", "doc": "&quot;Return a date time formatted into the database&#039;s date format.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_datetime_to_string", "name": "ActiveRecord\\Connection::datetime_to_string", "doc": "&quot;Return a date time formatted into the database&#039;s datetime format.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_string_to_datetime", "name": "ActiveRecord\\Connection::string_to_datetime", "doc": "&quot;Converts a string representation of a datetime into a DateTime object.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_limit", "name": "ActiveRecord\\Connection::limit", "doc": "&quot;Adds a limit clause to the SQL query.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_query_column_info", "name": "ActiveRecord\\Connection::query_column_info", "doc": "&quot;Query for column meta info and return statement handle.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_query_for_tables", "name": "ActiveRecord\\Connection::query_for_tables", "doc": "&quot;Query for all tables in the current database. The result must only\ncontain one column which has the name of the table.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_set_encoding", "name": "ActiveRecord\\Connection::set_encoding", "doc": "&quot;Executes query to specify the character set for this connection.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_native_database_types", "name": "ActiveRecord\\Connection::native_database_types", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Connection", "fromLink": "ActiveRecord/Connection.html", "link": "ActiveRecord/Connection.html#method_accepts_limit_and_order_for_update_and_delete", "name": "ActiveRecord\\Connection::accepts_limit_and_order_for_update_and_delete", "doc": "&quot;Specifies whether or not adapter can use LIMIT\/ORDER clauses with DELETE &amp;amp; UPDATE operations&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/ConnectionManager.html", "name": "ActiveRecord\\ConnectionManager", "doc": "&quot;Singleton to manage any and all database connections.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\ConnectionManager", "fromLink": "ActiveRecord/ConnectionManager.html", "link": "ActiveRecord/ConnectionManager.html#method_get_connection", "name": "ActiveRecord\\ConnectionManager::get_connection", "doc": "&quot;If $name is null then the default connection will be returned.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\ConnectionManager", "fromLink": "ActiveRecord/ConnectionManager.html", "link": "ActiveRecord/ConnectionManager.html#method_drop_connection", "name": "ActiveRecord\\ConnectionManager::drop_connection", "doc": "&quot;Drops the connection from the connection manager. Does not actually close it since there\nis no close method in PDO.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/CsvSerializer.html", "name": "ActiveRecord\\CsvSerializer", "doc": "&quot;CSV serializer.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\CsvSerializer", "fromLink": "ActiveRecord/CsvSerializer.html", "link": "ActiveRecord/CsvSerializer.html#method_to_s", "name": "ActiveRecord\\CsvSerializer::to_s", "doc": "&quot;Performs the serialization.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/DatabaseException.html", "name": "ActiveRecord\\DatabaseException", "doc": "&quot;Thrown when there was an error performing a database operation.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\DatabaseException", "fromLink": "ActiveRecord/DatabaseException.html", "link": "ActiveRecord/DatabaseException.html#method___construct", "name": "ActiveRecord\\DatabaseException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/DateTime.html", "name": "ActiveRecord\\DateTime", "doc": "&quot;An extension of PHP&#039;s DateTime class to provide dirty flagging and easier formatting options.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_attribute_of", "name": "ActiveRecord\\DateTime::attribute_of", "doc": "&quot;Indicates this object is an attribute of the specified model, with the given attribute name.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_format", "name": "ActiveRecord\\DateTime::format", "doc": "&quot;Formats the DateTime to the specified format.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_get_format", "name": "ActiveRecord\\DateTime::get_format", "doc": "&quot;Returns the format string.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_createFromFormat", "name": "ActiveRecord\\DateTime::createFromFormat", "doc": "&quot;This needs to be overriden so it returns an instance of this class instead of PHP&#039;s \\DateTime.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method___toString", "name": "ActiveRecord\\DateTime::__toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method___clone", "name": "ActiveRecord\\DateTime::__clone", "doc": "&quot;Handle PHP object &lt;code&gt;clone&lt;\/code&gt;.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_setDate", "name": "ActiveRecord\\DateTime::setDate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_setISODate", "name": "ActiveRecord\\DateTime::setISODate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_setTime", "name": "ActiveRecord\\DateTime::setTime", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_setTimestamp", "name": "ActiveRecord\\DateTime::setTimestamp", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_setTimezone", "name": "ActiveRecord\\DateTime::setTimezone", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_modify", "name": "ActiveRecord\\DateTime::modify", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_add", "name": "ActiveRecord\\DateTime::add", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTime", "fromLink": "ActiveRecord/DateTime.html", "link": "ActiveRecord/DateTime.html#method_sub", "name": "ActiveRecord\\DateTime::sub", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/DateTimeInterface.html", "name": "ActiveRecord\\DateTimeInterface", "doc": "&quot;Interface for the ActiveRecord\\DateTime class so that ActiveRecord\\Model-&gt;assign_attribute() will\nknow to call attribute_of() on passed values. This is so the DateTime object can flag the model\nas dirty via $model-&gt;flag_dirty() when one of its setters is called.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\DateTimeInterface", "fromLink": "ActiveRecord/DateTimeInterface.html", "link": "ActiveRecord/DateTimeInterface.html#method_attribute_of", "name": "ActiveRecord\\DateTimeInterface::attribute_of", "doc": "&quot;Indicates this object is an attribute of the specified model, with the given attribute name.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTimeInterface", "fromLink": "ActiveRecord/DateTimeInterface.html", "link": "ActiveRecord/DateTimeInterface.html#method_format", "name": "ActiveRecord\\DateTimeInterface::format", "doc": "&quot;Formats the DateTime to the specified format.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\DateTimeInterface", "fromLink": "ActiveRecord/DateTimeInterface.html", "link": "ActiveRecord/DateTimeInterface.html#method_createFromFormat", "name": "ActiveRecord\\DateTimeInterface::createFromFormat", "doc": "&quot;See http:\/\/php.net\/manual\/en\/datetime.createfromformat.php&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Errors.html", "name": "ActiveRecord\\Errors", "doc": "&quot;Class that holds {@link Validations} errors.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method___construct", "name": "ActiveRecord\\Errors::__construct", "doc": "&quot;Constructs an {@link Errors} object.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_clear_model", "name": "ActiveRecord\\Errors::clear_model", "doc": "&quot;Nulls $model so we don&#039;t get pesky circular references. $model is only needed during the\nvalidation process and so can be safely cleared once that is done.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_add", "name": "ActiveRecord\\Errors::add", "doc": "&quot;Add an error message.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_add_on_empty", "name": "ActiveRecord\\Errors::add_on_empty", "doc": "&quot;Adds an error message only if the attribute value is {@link http:\/\/www.php.net\/empty empty}.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method___get", "name": "ActiveRecord\\Errors::__get", "doc": "&quot;Retrieve error messages for an attribute.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_add_on_blank", "name": "ActiveRecord\\Errors::add_on_blank", "doc": "&quot;Adds the error message only if the attribute value was null or an empty string.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_is_invalid", "name": "ActiveRecord\\Errors::is_invalid", "doc": "&quot;Returns true if the specified attribute had any error messages.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_on", "name": "ActiveRecord\\Errors::on", "doc": "&quot;Returns the error message(s) for the specified attribute or null if none.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_get_raw_errors", "name": "ActiveRecord\\Errors::get_raw_errors", "doc": "&quot;Returns the internal errors object.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_full_messages", "name": "ActiveRecord\\Errors::full_messages", "doc": "&quot;Returns all the error messages as an array.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_to_array", "name": "ActiveRecord\\Errors::to_array", "doc": "&quot;Returns all the error messages as an array, including error key.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method___toString", "name": "ActiveRecord\\Errors::__toString", "doc": "&quot;Convert all error messages to a String.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_is_empty", "name": "ActiveRecord\\Errors::is_empty", "doc": "&quot;Returns true if there are no error messages.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_clear", "name": "ActiveRecord\\Errors::clear", "doc": "&quot;Clears out all error messages.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_size", "name": "ActiveRecord\\Errors::size", "doc": "&quot;Returns the number of error messages there are.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Errors", "fromLink": "ActiveRecord/Errors.html", "link": "ActiveRecord/Errors.html#method_getIterator", "name": "ActiveRecord\\Errors::getIterator", "doc": "&quot;Returns an iterator to the error messages.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Expressions.html", "name": "ActiveRecord\\Expressions", "doc": "&quot;Templating like class for building SQL statements.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Expressions", "fromLink": "ActiveRecord/Expressions.html", "link": "ActiveRecord/Expressions.html#method___construct", "name": "ActiveRecord\\Expressions::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Expressions", "fromLink": "ActiveRecord/Expressions.html", "link": "ActiveRecord/Expressions.html#method_bind", "name": "ActiveRecord\\Expressions::bind", "doc": "&quot;Bind a value to the specific one based index. There must be a bind marker\nfor each value bound or to_s() will throw an exception.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Expressions", "fromLink": "ActiveRecord/Expressions.html", "link": "ActiveRecord/Expressions.html#method_bind_values", "name": "ActiveRecord\\Expressions::bind_values", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Expressions", "fromLink": "ActiveRecord/Expressions.html", "link": "ActiveRecord/Expressions.html#method_values", "name": "ActiveRecord\\Expressions::values", "doc": "&quot;Returns all the values currently bound.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Expressions", "fromLink": "ActiveRecord/Expressions.html", "link": "ActiveRecord/Expressions.html#method_get_connection", "name": "ActiveRecord\\Expressions::get_connection", "doc": "&quot;Returns the connection object.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Expressions", "fromLink": "ActiveRecord/Expressions.html", "link": "ActiveRecord/Expressions.html#method_set_connection", "name": "ActiveRecord\\Expressions::set_connection", "doc": "&quot;Sets the connection object. It is highly recommended to set this so we can\nuse the adapter&#039;s native escaping mechanism.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Expressions", "fromLink": "ActiveRecord/Expressions.html", "link": "ActiveRecord/Expressions.html#method_to_s", "name": "ActiveRecord\\Expressions::to_s", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/ExpressionsException.html", "name": "ActiveRecord\\ExpressionsException", "doc": "&quot;Thrown by {@link Expressions}.&quot;"},
                    
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/HasAndBelongsToMany.html", "name": "ActiveRecord\\HasAndBelongsToMany", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\HasAndBelongsToMany", "fromLink": "ActiveRecord/HasAndBelongsToMany.html", "link": "ActiveRecord/HasAndBelongsToMany.html#method___construct", "name": "ActiveRecord\\HasAndBelongsToMany::__construct", "doc": "&quot;Constructs a relationship.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\HasAndBelongsToMany", "fromLink": "ActiveRecord/HasAndBelongsToMany.html", "link": "ActiveRecord/HasAndBelongsToMany.html#method_load", "name": "ActiveRecord\\HasAndBelongsToMany::load", "doc": "&quot;This will load the related model data.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/HasMany.html", "name": "ActiveRecord\\HasMany", "doc": "&quot;One-to-many relationship.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\HasMany", "fromLink": "ActiveRecord/HasMany.html", "link": "ActiveRecord/HasMany.html#method___construct", "name": "ActiveRecord\\HasMany::__construct", "doc": "&quot;Constructs a {@link HasMany} relationship.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\HasMany", "fromLink": "ActiveRecord/HasMany.html", "link": "ActiveRecord/HasMany.html#method_set_keys", "name": "ActiveRecord\\HasMany::set_keys", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\HasMany", "fromLink": "ActiveRecord/HasMany.html", "link": "ActiveRecord/HasMany.html#method_load", "name": "ActiveRecord\\HasMany::load", "doc": "&quot;This will load the related model data.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\HasMany", "fromLink": "ActiveRecord/HasMany.html", "link": "ActiveRecord/HasMany.html#method_build_association", "name": "ActiveRecord\\HasMany::build_association", "doc": "&quot;Creates a new instance of specified {@link Model} with the attributes pre-loaded.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\HasMany", "fromLink": "ActiveRecord/HasMany.html", "link": "ActiveRecord/HasMany.html#method_create_association", "name": "ActiveRecord\\HasMany::create_association", "doc": "&quot;Creates a new instance of {@link Model} and invokes save.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\HasMany", "fromLink": "ActiveRecord/HasMany.html", "link": "ActiveRecord/HasMany.html#method_load_eagerly", "name": "ActiveRecord\\HasMany::load_eagerly", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/HasManyThroughAssociationException.html", "name": "ActiveRecord\\HasManyThroughAssociationException", "doc": "&quot;Thrown for has many thru exceptions.&quot;"},
                    
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/HasOne.html", "name": "ActiveRecord\\HasOne", "doc": "&quot;One-to-one relationship.&quot;"},
                    
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Inflector.html", "name": "ActiveRecord\\Inflector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Inflector", "fromLink": "ActiveRecord/Inflector.html", "link": "ActiveRecord/Inflector.html#method_instance", "name": "ActiveRecord\\Inflector::instance", "doc": "&quot;Get an instance of the {@link Inflector} class.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Inflector", "fromLink": "ActiveRecord/Inflector.html", "link": "ActiveRecord/Inflector.html#method_camelize", "name": "ActiveRecord\\Inflector::camelize", "doc": "&quot;Turn a string into its camelized version.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Inflector", "fromLink": "ActiveRecord/Inflector.html", "link": "ActiveRecord/Inflector.html#method_is_upper", "name": "ActiveRecord\\Inflector::is_upper", "doc": "&quot;Determines if a string contains all uppercase characters.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Inflector", "fromLink": "ActiveRecord/Inflector.html", "link": "ActiveRecord/Inflector.html#method_is_lower", "name": "ActiveRecord\\Inflector::is_lower", "doc": "&quot;Determines if a string contains all lowercase characters.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Inflector", "fromLink": "ActiveRecord/Inflector.html", "link": "ActiveRecord/Inflector.html#method_uncamelize", "name": "ActiveRecord\\Inflector::uncamelize", "doc": "&quot;Convert a camelized string to a lowercase, underscored string.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Inflector", "fromLink": "ActiveRecord/Inflector.html", "link": "ActiveRecord/Inflector.html#method_underscorify", "name": "ActiveRecord\\Inflector::underscorify", "doc": "&quot;Convert a string with space into a underscored equivalent.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Inflector", "fromLink": "ActiveRecord/Inflector.html", "link": "ActiveRecord/Inflector.html#method_keyify", "name": "ActiveRecord\\Inflector::keyify", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Inflector", "fromLink": "ActiveRecord/Inflector.html", "link": "ActiveRecord/Inflector.html#method_variablize", "name": "ActiveRecord\\Inflector::variablize", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/InterfaceRelationship.html", "name": "ActiveRecord\\InterfaceRelationship", "doc": "&quot;Interface for a table relationship.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\InterfaceRelationship", "fromLink": "ActiveRecord/InterfaceRelationship.html", "link": "ActiveRecord/InterfaceRelationship.html#method___construct", "name": "ActiveRecord\\InterfaceRelationship::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\InterfaceRelationship", "fromLink": "ActiveRecord/InterfaceRelationship.html", "link": "ActiveRecord/InterfaceRelationship.html#method_build_association", "name": "ActiveRecord\\InterfaceRelationship::build_association", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\InterfaceRelationship", "fromLink": "ActiveRecord/InterfaceRelationship.html", "link": "ActiveRecord/InterfaceRelationship.html#method_create_association", "name": "ActiveRecord\\InterfaceRelationship::create_association", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/JsonSerializer.html", "name": "ActiveRecord\\JsonSerializer", "doc": "&quot;JSON serializer.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\JsonSerializer", "fromLink": "ActiveRecord/JsonSerializer.html", "link": "ActiveRecord/JsonSerializer.html#method_to_s", "name": "ActiveRecord\\JsonSerializer::to_s", "doc": "&quot;Performs the serialization.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Model.html", "name": "ActiveRecord\\Model", "doc": "&quot;The base class for your models.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method___construct", "name": "ActiveRecord\\Model::__construct", "doc": "&quot;Constructs a model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method___get", "name": "ActiveRecord\\Model::__get", "doc": "&quot;Magic method which delegates to read_attribute(). This handles firing off getter methods,\nas they are not checked\/invoked inside of read_attribute(). This circumvents the problem with\na getter being accessed with the same name as an actual attribute.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method___isset", "name": "ActiveRecord\\Model::__isset", "doc": "&quot;Determines if an attribute exists for this {@link Model}.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method___set", "name": "ActiveRecord\\Model::__set", "doc": "&quot;Magic allows un-defined attributes to set via $attributes.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method___wakeup", "name": "ActiveRecord\\Model::__wakeup", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_assign_attribute", "name": "ActiveRecord\\Model::assign_attribute", "doc": "&quot;Assign a value to an attribute.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_read_attribute", "name": "ActiveRecord\\Model::read_attribute", "doc": "&quot;Retrieves an attribute&#039;s value or a relationship object based on the name passed. If the attribute\naccessed is &#039;id&#039; then it will return the model&#039;s primary key no matter what the actual attribute name is\nfor the primary key.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_flag_dirty", "name": "ActiveRecord\\Model::flag_dirty", "doc": "&quot;Flags an attribute as dirty.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_dirty_attributes", "name": "ActiveRecord\\Model::dirty_attributes", "doc": "&quot;Returns hash of attributes that have been modified since loading the model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_attribute_is_dirty", "name": "ActiveRecord\\Model::attribute_is_dirty", "doc": "&quot;Check if a particular attribute has been modified since loading the model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_attributes", "name": "ActiveRecord\\Model::attributes", "doc": "&quot;Returns a copy of the model&#039;s attributes hash.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_get_primary_key", "name": "ActiveRecord\\Model::get_primary_key", "doc": "&quot;Retrieve the primary key name.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_get_real_attribute_name", "name": "ActiveRecord\\Model::get_real_attribute_name", "doc": "&quot;Returns the actual attribute name if $name is aliased.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_get_validation_rules", "name": "ActiveRecord\\Model::get_validation_rules", "doc": "&quot;Returns array of validator data for this Model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_get_values_for", "name": "ActiveRecord\\Model::get_values_for", "doc": "&quot;Returns an associative array containing values for all the attributes in $attributes&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_table_name", "name": "ActiveRecord\\Model::table_name", "doc": "&quot;Retrieves the name of the table for this Model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_is_readonly", "name": "ActiveRecord\\Model::is_readonly", "doc": "&quot;Determine if the model is in read-only mode.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_is_new_record", "name": "ActiveRecord\\Model::is_new_record", "doc": "&quot;Determine if the model is a new record.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_readonly", "name": "ActiveRecord\\Model::readonly", "doc": "&quot;Flag model as readonly.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_connection", "name": "ActiveRecord\\Model::connection", "doc": "&quot;Retrieve the connection for this model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_reestablish_connection", "name": "ActiveRecord\\Model::reestablish_connection", "doc": "&quot;Re-establishes the database connection with a new connection.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_table", "name": "ActiveRecord\\Model::table", "doc": "&quot;Returns the {@link Table} object for this model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_create", "name": "ActiveRecord\\Model::create", "doc": "&quot;Creates a model and saves it to the database.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_save", "name": "ActiveRecord\\Model::save", "doc": "&quot;Save the model to the database.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_expire_cache", "name": "ActiveRecord\\Model::expire_cache", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_cache_key", "name": "ActiveRecord\\Model::cache_key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_delete_all", "name": "ActiveRecord\\Model::delete_all", "doc": "&quot;Deletes records matching conditions in $options&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_update_all", "name": "ActiveRecord\\Model::update_all", "doc": "&quot;Updates records using set in $options&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_delete", "name": "ActiveRecord\\Model::delete", "doc": "&quot;Deletes this model from the database and returns true if successful.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_values_for_pk", "name": "ActiveRecord\\Model::values_for_pk", "doc": "&quot;Helper that creates an array of values for the primary key(s).&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_values_for", "name": "ActiveRecord\\Model::values_for", "doc": "&quot;Helper to return a hash of values for the specified attributes.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_is_dirty", "name": "ActiveRecord\\Model::is_dirty", "doc": "&quot;Returns true if the model has been modified.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_is_valid", "name": "ActiveRecord\\Model::is_valid", "doc": "&quot;Run validations on model and returns whether or not model passed validation.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_is_invalid", "name": "ActiveRecord\\Model::is_invalid", "doc": "&quot;Runs validations and returns true if invalid.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_set_timestamps", "name": "ActiveRecord\\Model::set_timestamps", "doc": "&quot;Updates a model&#039;s timestamps.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_update_attributes", "name": "ActiveRecord\\Model::update_attributes", "doc": "&quot;Mass update the model with an array of attribute data and saves to the database.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_update_attribute", "name": "ActiveRecord\\Model::update_attribute", "doc": "&quot;Updates a single attribute and saves the record without going through the normal validation procedure.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_set_attributes", "name": "ActiveRecord\\Model::set_attributes", "doc": "&quot;Mass update the model with data from an attributes hash.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_set_relationship_from_eager_load", "name": "ActiveRecord\\Model::set_relationship_from_eager_load", "doc": "&quot;Add a model to the given named ($name) relationship.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_reload", "name": "ActiveRecord\\Model::reload", "doc": "&quot;Reloads the attributes and relationships of this object from the database.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method___clone", "name": "ActiveRecord\\Model::__clone", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_reset_dirty", "name": "ActiveRecord\\Model::reset_dirty", "doc": "&quot;Resets the dirty array.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method___callStatic", "name": "ActiveRecord\\Model::__callStatic", "doc": "&quot;Enables the use of dynamic finders.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method___call", "name": "ActiveRecord\\Model::__call", "doc": "&quot;Enables the use of build|create for associations.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_all", "name": "ActiveRecord\\Model::all", "doc": "&quot;Alias for self::find(&#039;all&#039;).&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_count", "name": "ActiveRecord\\Model::count", "doc": "&quot;Get a count of qualifying records.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_exists", "name": "ActiveRecord\\Model::exists", "doc": "&quot;Determine if a record exists.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_first", "name": "ActiveRecord\\Model::first", "doc": "&quot;Alias for self::find(&#039;first&#039;).&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_last", "name": "ActiveRecord\\Model::last", "doc": "&quot;Alias for self::find(&#039;last&#039;)&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_find", "name": "ActiveRecord\\Model::find", "doc": "&quot;Find records in the database.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_get_models_from_cache", "name": "ActiveRecord\\Model::get_models_from_cache", "doc": "&quot;Will look up a list of primary keys from cache&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_find_by_pk", "name": "ActiveRecord\\Model::find_by_pk", "doc": "&quot;Finder method which will find by a single or array of primary keys for this model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_find_by_sql", "name": "ActiveRecord\\Model::find_by_sql", "doc": "&quot;Find using a raw SELECT query.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_query", "name": "ActiveRecord\\Model::query", "doc": "&quot;Helper method to run arbitrary queries against the model&#039;s database connection.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_is_options_hash", "name": "ActiveRecord\\Model::is_options_hash", "doc": "&quot;Determines if the specified array is a valid ActiveRecord options array.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_pk_conditions", "name": "ActiveRecord\\Model::pk_conditions", "doc": "&quot;Returns a hash containing the names =&gt; values of the primary key.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_extract_and_validate_options", "name": "ActiveRecord\\Model::extract_and_validate_options", "doc": "&quot;Pulls out the options hash from $array if any.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_to_json", "name": "ActiveRecord\\Model::to_json", "doc": "&quot;Returns a JSON representation of this model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_to_xml", "name": "ActiveRecord\\Model::to_xml", "doc": "&quot;Returns an XML representation of this model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_to_csv", "name": "ActiveRecord\\Model::to_csv", "doc": "&quot;Returns an CSV representation of this model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_to_array", "name": "ActiveRecord\\Model::to_array", "doc": "&quot;Returns an Array representation of this model.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Model", "fromLink": "ActiveRecord/Model.html", "link": "ActiveRecord/Model.html#method_transaction", "name": "ActiveRecord\\Model::transaction", "doc": "&quot;Executes a block of code inside a database transaction.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/ModelException.html", "name": "ActiveRecord\\ModelException", "doc": "&quot;Thrown by {@link Model}.&quot;"},
                    
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/MysqlAdapter.html", "name": "ActiveRecord\\MysqlAdapter", "doc": "&quot;Adapter for MySQL.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\MysqlAdapter", "fromLink": "ActiveRecord/MysqlAdapter.html", "link": "ActiveRecord/MysqlAdapter.html#method_limit", "name": "ActiveRecord\\MysqlAdapter::limit", "doc": "&quot;Adds a limit clause to the SQL query.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\MysqlAdapter", "fromLink": "ActiveRecord/MysqlAdapter.html", "link": "ActiveRecord/MysqlAdapter.html#method_query_column_info", "name": "ActiveRecord\\MysqlAdapter::query_column_info", "doc": "&quot;Query for column meta info and return statement handle.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\MysqlAdapter", "fromLink": "ActiveRecord/MysqlAdapter.html", "link": "ActiveRecord/MysqlAdapter.html#method_query_for_tables", "name": "ActiveRecord\\MysqlAdapter::query_for_tables", "doc": "&quot;Query for all tables in the current database. The result must only\ncontain one column which has the name of the table.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\MysqlAdapter", "fromLink": "ActiveRecord/MysqlAdapter.html", "link": "ActiveRecord/MysqlAdapter.html#method_create_column", "name": "ActiveRecord\\MysqlAdapter::create_column", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\MysqlAdapter", "fromLink": "ActiveRecord/MysqlAdapter.html", "link": "ActiveRecord/MysqlAdapter.html#method_set_encoding", "name": "ActiveRecord\\MysqlAdapter::set_encoding", "doc": "&quot;Executes query to specify the character set for this connection.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\MysqlAdapter", "fromLink": "ActiveRecord/MysqlAdapter.html", "link": "ActiveRecord/MysqlAdapter.html#method_accepts_limit_and_order_for_update_and_delete", "name": "ActiveRecord\\MysqlAdapter::accepts_limit_and_order_for_update_and_delete", "doc": "&quot;Specifies whether or not adapter can use LIMIT\/ORDER clauses with DELETE &amp;amp; UPDATE operations&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\MysqlAdapter", "fromLink": "ActiveRecord/MysqlAdapter.html", "link": "ActiveRecord/MysqlAdapter.html#method_native_database_types", "name": "ActiveRecord\\MysqlAdapter::native_database_types", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/OciAdapter.html", "name": "ActiveRecord\\OciAdapter", "doc": "&quot;Adapter for OCI (not completed yet).&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method___construct", "name": "ActiveRecord\\OciAdapter::__construct", "doc": "&quot;Class Connection is a singleton. Access it via instance().&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_supports_sequences", "name": "ActiveRecord\\OciAdapter::supports_sequences", "doc": "&quot;Tells you if this adapter supports sequences or not.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_get_next_sequence_value", "name": "ActiveRecord\\OciAdapter::get_next_sequence_value", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_next_sequence_value", "name": "ActiveRecord\\OciAdapter::next_sequence_value", "doc": "&quot;Return SQL for getting the next value in a sequence.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_date_to_string", "name": "ActiveRecord\\OciAdapter::date_to_string", "doc": "&quot;Return a date time formatted into the database&#039;s date format.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_datetime_to_string", "name": "ActiveRecord\\OciAdapter::datetime_to_string", "doc": "&quot;Return a date time formatted into the database&#039;s datetime format.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_string_to_datetime", "name": "ActiveRecord\\OciAdapter::string_to_datetime", "doc": "&quot;Converts a string representation of a datetime into a DateTime object.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_limit", "name": "ActiveRecord\\OciAdapter::limit", "doc": "&quot;Adds a limit clause to the SQL query.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_query_column_info", "name": "ActiveRecord\\OciAdapter::query_column_info", "doc": "&quot;Query for column meta info and return statement handle.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_query_for_tables", "name": "ActiveRecord\\OciAdapter::query_for_tables", "doc": "&quot;Query for all tables in the current database. The result must only\ncontain one column which has the name of the table.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_create_column", "name": "ActiveRecord\\OciAdapter::create_column", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_set_encoding", "name": "ActiveRecord\\OciAdapter::set_encoding", "doc": "&quot;Executes query to specify the character set for this connection.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\OciAdapter", "fromLink": "ActiveRecord/OciAdapter.html", "link": "ActiveRecord/OciAdapter.html#method_native_database_types", "name": "ActiveRecord\\OciAdapter::native_database_types", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/PgsqlAdapter.html", "name": "ActiveRecord\\PgsqlAdapter", "doc": "&quot;Adapter for Postgres (not completed yet)&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\PgsqlAdapter", "fromLink": "ActiveRecord/PgsqlAdapter.html", "link": "ActiveRecord/PgsqlAdapter.html#method_supports_sequences", "name": "ActiveRecord\\PgsqlAdapter::supports_sequences", "doc": "&quot;Tells you if this adapter supports sequences or not.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\PgsqlAdapter", "fromLink": "ActiveRecord/PgsqlAdapter.html", "link": "ActiveRecord/PgsqlAdapter.html#method_get_sequence_name", "name": "ActiveRecord\\PgsqlAdapter::get_sequence_name", "doc": "&quot;Return a default sequence name for the specified table.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\PgsqlAdapter", "fromLink": "ActiveRecord/PgsqlAdapter.html", "link": "ActiveRecord/PgsqlAdapter.html#method_next_sequence_value", "name": "ActiveRecord\\PgsqlAdapter::next_sequence_value", "doc": "&quot;Return SQL for getting the next value in a sequence.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\PgsqlAdapter", "fromLink": "ActiveRecord/PgsqlAdapter.html", "link": "ActiveRecord/PgsqlAdapter.html#method_limit", "name": "ActiveRecord\\PgsqlAdapter::limit", "doc": "&quot;Adds a limit clause to the SQL query.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\PgsqlAdapter", "fromLink": "ActiveRecord/PgsqlAdapter.html", "link": "ActiveRecord/PgsqlAdapter.html#method_query_column_info", "name": "ActiveRecord\\PgsqlAdapter::query_column_info", "doc": "&quot;Query for column meta info and return statement handle.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\PgsqlAdapter", "fromLink": "ActiveRecord/PgsqlAdapter.html", "link": "ActiveRecord/PgsqlAdapter.html#method_query_for_tables", "name": "ActiveRecord\\PgsqlAdapter::query_for_tables", "doc": "&quot;Query for all tables in the current database. The result must only\ncontain one column which has the name of the table.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\PgsqlAdapter", "fromLink": "ActiveRecord/PgsqlAdapter.html", "link": "ActiveRecord/PgsqlAdapter.html#method_create_column", "name": "ActiveRecord\\PgsqlAdapter::create_column", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\PgsqlAdapter", "fromLink": "ActiveRecord/PgsqlAdapter.html", "link": "ActiveRecord/PgsqlAdapter.html#method_set_encoding", "name": "ActiveRecord\\PgsqlAdapter::set_encoding", "doc": "&quot;Executes query to specify the character set for this connection.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\PgsqlAdapter", "fromLink": "ActiveRecord/PgsqlAdapter.html", "link": "ActiveRecord/PgsqlAdapter.html#method_native_database_types", "name": "ActiveRecord\\PgsqlAdapter::native_database_types", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/ReadOnlyException.html", "name": "ActiveRecord\\ReadOnlyException", "doc": "&quot;Thrown when attempting to perform a write operation on a {@link Model} that is in read-only mode.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\ReadOnlyException", "fromLink": "ActiveRecord/ReadOnlyException.html", "link": "ActiveRecord/ReadOnlyException.html#method___construct", "name": "ActiveRecord\\ReadOnlyException::__construct", "doc": "&quot;Sets the exception message to show the undefined property&#039;s name.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/RecordNotFound.html", "name": "ActiveRecord\\RecordNotFound", "doc": "&quot;Thrown when a record cannot be found.&quot;"},
                    
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Reflections.html", "name": "ActiveRecord\\Reflections", "doc": "&quot;Simple class that caches reflections of classes.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Reflections", "fromLink": "ActiveRecord/Reflections.html", "link": "ActiveRecord/Reflections.html#method_add", "name": "ActiveRecord\\Reflections::add", "doc": "&quot;Instantiates a new ReflectionClass for the given class.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Reflections", "fromLink": "ActiveRecord/Reflections.html", "link": "ActiveRecord/Reflections.html#method_destroy", "name": "ActiveRecord\\Reflections::destroy", "doc": "&quot;Destroys the cached ReflectionClass.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Reflections", "fromLink": "ActiveRecord/Reflections.html", "link": "ActiveRecord/Reflections.html#method_get", "name": "ActiveRecord\\Reflections::get", "doc": "&quot;Get a cached ReflectionClass.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/RelationshipException.html", "name": "ActiveRecord\\RelationshipException", "doc": "&quot;Thrown for relationship exceptions.&quot;"},
                    
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/SQLBuilder.html", "name": "ActiveRecord\\SQLBuilder", "doc": "&quot;Helper class for building sql statements progmatically.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method___construct", "name": "ActiveRecord\\SQLBuilder::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method___toString", "name": "ActiveRecord\\SQLBuilder::__toString", "doc": "&quot;Returns the SQL string.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_to_s", "name": "ActiveRecord\\SQLBuilder::to_s", "doc": "&quot;Returns the SQL string.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_bind_values", "name": "ActiveRecord\\SQLBuilder::bind_values", "doc": "&quot;Returns the bind values.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_get_where_values", "name": "ActiveRecord\\SQLBuilder::get_where_values", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_where", "name": "ActiveRecord\\SQLBuilder::where", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_order", "name": "ActiveRecord\\SQLBuilder::order", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_group", "name": "ActiveRecord\\SQLBuilder::group", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_having", "name": "ActiveRecord\\SQLBuilder::having", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_limit", "name": "ActiveRecord\\SQLBuilder::limit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_offset", "name": "ActiveRecord\\SQLBuilder::offset", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_select", "name": "ActiveRecord\\SQLBuilder::select", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_joins", "name": "ActiveRecord\\SQLBuilder::joins", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_insert", "name": "ActiveRecord\\SQLBuilder::insert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_update", "name": "ActiveRecord\\SQLBuilder::update", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_delete", "name": "ActiveRecord\\SQLBuilder::delete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_reverse_order", "name": "ActiveRecord\\SQLBuilder::reverse_order", "doc": "&quot;Reverses an order clause.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_create_conditions_from_underscored_string", "name": "ActiveRecord\\SQLBuilder::create_conditions_from_underscored_string", "doc": "&quot;Converts a string like \&quot;id_and_name_or_z\&quot; into a conditions value like array(\&quot;id=? AND name=? OR z=?\&quot;, values, .&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SQLBuilder", "fromLink": "ActiveRecord/SQLBuilder.html", "link": "ActiveRecord/SQLBuilder.html#method_create_hash_from_underscored_string", "name": "ActiveRecord\\SQLBuilder::create_hash_from_underscored_string", "doc": "&quot;Like create_conditions_from_underscored_string but returns a hash of name =&gt; value array instead.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Serialization.html", "name": "ActiveRecord\\Serialization", "doc": "&quot;Base class for Model serializers.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Serialization", "fromLink": "ActiveRecord/Serialization.html", "link": "ActiveRecord/Serialization.html#method___construct", "name": "ActiveRecord\\Serialization::__construct", "doc": "&quot;Constructs a {@link Serialization} object.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Serialization", "fromLink": "ActiveRecord/Serialization.html", "link": "ActiveRecord/Serialization.html#method_options_to_a", "name": "ActiveRecord\\Serialization::options_to_a", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Serialization", "fromLink": "ActiveRecord/Serialization.html", "link": "ActiveRecord/Serialization.html#method_to_a", "name": "ActiveRecord\\Serialization::to_a", "doc": "&quot;Returns the attributes array.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Serialization", "fromLink": "ActiveRecord/Serialization.html", "link": "ActiveRecord/Serialization.html#method___toString", "name": "ActiveRecord\\Serialization::__toString", "doc": "&quot;Returns the serialized object as a string.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Serialization", "fromLink": "ActiveRecord/Serialization.html", "link": "ActiveRecord/Serialization.html#method_to_s", "name": "ActiveRecord\\Serialization::to_s", "doc": "&quot;Performs the serialization.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Singleton.html", "name": "ActiveRecord\\Singleton", "doc": "&quot;This implementation of the singleton pattern does not conform to the strong definition\ngiven by the \&quot;Gang of Four.\&quot; The __construct() method has not be privatized so that\na singleton pattern is capable of being achieved; however, multiple instantiations are also\npossible. This allows the user more freedom with this pattern.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Singleton", "fromLink": "ActiveRecord/Singleton.html", "link": "ActiveRecord/Singleton.html#method_instance", "name": "ActiveRecord\\Singleton::instance", "doc": "&quot;Static method for instantiating a singleton object.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Singleton", "fromLink": "ActiveRecord/Singleton.html", "link": "ActiveRecord/Singleton.html#method_get_called_class", "name": "ActiveRecord\\Singleton::get_called_class", "doc": "&quot;Similar to a get_called_class() for a child class to invoke.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/SqliteAdapter.html", "name": "ActiveRecord\\SqliteAdapter", "doc": "&quot;Adapter for SQLite.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\SqliteAdapter", "fromLink": "ActiveRecord/SqliteAdapter.html", "link": "ActiveRecord/SqliteAdapter.html#method___construct", "name": "ActiveRecord\\SqliteAdapter::__construct", "doc": "&quot;Class Connection is a singleton. Access it via instance().&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SqliteAdapter", "fromLink": "ActiveRecord/SqliteAdapter.html", "link": "ActiveRecord/SqliteAdapter.html#method_limit", "name": "ActiveRecord\\SqliteAdapter::limit", "doc": "&quot;Adds a limit clause to the SQL query.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SqliteAdapter", "fromLink": "ActiveRecord/SqliteAdapter.html", "link": "ActiveRecord/SqliteAdapter.html#method_query_column_info", "name": "ActiveRecord\\SqliteAdapter::query_column_info", "doc": "&quot;Query for column meta info and return statement handle.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SqliteAdapter", "fromLink": "ActiveRecord/SqliteAdapter.html", "link": "ActiveRecord/SqliteAdapter.html#method_query_for_tables", "name": "ActiveRecord\\SqliteAdapter::query_for_tables", "doc": "&quot;Query for all tables in the current database. The result must only\ncontain one column which has the name of the table.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SqliteAdapter", "fromLink": "ActiveRecord/SqliteAdapter.html", "link": "ActiveRecord/SqliteAdapter.html#method_create_column", "name": "ActiveRecord\\SqliteAdapter::create_column", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SqliteAdapter", "fromLink": "ActiveRecord/SqliteAdapter.html", "link": "ActiveRecord/SqliteAdapter.html#method_set_encoding", "name": "ActiveRecord\\SqliteAdapter::set_encoding", "doc": "&quot;Executes query to specify the character set for this connection.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SqliteAdapter", "fromLink": "ActiveRecord/SqliteAdapter.html", "link": "ActiveRecord/SqliteAdapter.html#method_accepts_limit_and_order_for_update_and_delete", "name": "ActiveRecord\\SqliteAdapter::accepts_limit_and_order_for_update_and_delete", "doc": "&quot;Specifies whether or not adapter can use LIMIT\/ORDER clauses with DELETE &amp;amp; UPDATE operations&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\SqliteAdapter", "fromLink": "ActiveRecord/SqliteAdapter.html", "link": "ActiveRecord/SqliteAdapter.html#method_native_database_types", "name": "ActiveRecord\\SqliteAdapter::native_database_types", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/StandardInflector.html", "name": "ActiveRecord\\StandardInflector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\StandardInflector", "fromLink": "ActiveRecord/StandardInflector.html", "link": "ActiveRecord/StandardInflector.html#method_tableize", "name": "ActiveRecord\\StandardInflector::tableize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\StandardInflector", "fromLink": "ActiveRecord/StandardInflector.html", "link": "ActiveRecord/StandardInflector.html#method_variablize", "name": "ActiveRecord\\StandardInflector::variablize", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Table.html", "name": "ActiveRecord\\Table", "doc": "&quot;Manages reading and writing to a database table.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_load", "name": "ActiveRecord\\Table::load", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_clear_cache", "name": "ActiveRecord\\Table::clear_cache", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method___construct", "name": "ActiveRecord\\Table::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_reestablish_connection", "name": "ActiveRecord\\Table::reestablish_connection", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_create_joins", "name": "ActiveRecord\\Table::create_joins", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_options_to_sql", "name": "ActiveRecord\\Table::options_to_sql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_find", "name": "ActiveRecord\\Table::find", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_cache_key_for_model", "name": "ActiveRecord\\Table::cache_key_for_model", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_find_by_sql", "name": "ActiveRecord\\Table::find_by_sql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_get_column_by_inflected_name", "name": "ActiveRecord\\Table::get_column_by_inflected_name", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_get_fully_qualified_table_name", "name": "ActiveRecord\\Table::get_fully_qualified_table_name", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_get_relationship", "name": "ActiveRecord\\Table::get_relationship", "doc": "&quot;Retrieve a relationship object for this table. Strict as true will throw an error\nif the relationship name does not exist.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_has_relationship", "name": "ActiveRecord\\Table::has_relationship", "doc": "&quot;Does a given relationship exist?&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_insert", "name": "ActiveRecord\\Table::insert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_update", "name": "ActiveRecord\\Table::update", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Table", "fromLink": "ActiveRecord/Table.html", "link": "ActiveRecord/Table.html#method_delete", "name": "ActiveRecord\\Table::delete", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/UndefinedPropertyException.html", "name": "ActiveRecord\\UndefinedPropertyException", "doc": "&quot;Thrown when attempting to access an invalid property on a {@link Model}.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\UndefinedPropertyException", "fromLink": "ActiveRecord/UndefinedPropertyException.html", "link": "ActiveRecord/UndefinedPropertyException.html#method___construct", "name": "ActiveRecord\\UndefinedPropertyException::__construct", "doc": "&quot;Sets the exception message to show the undefined property&#039;s name.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Utils.html", "name": "ActiveRecord\\Utils", "doc": "&quot;Some internal utility functions.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Utils", "fromLink": "ActiveRecord/Utils.html", "link": "ActiveRecord/Utils.html#method_extract_options", "name": "ActiveRecord\\Utils::extract_options", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Utils", "fromLink": "ActiveRecord/Utils.html", "link": "ActiveRecord/Utils.html#method_add_condition", "name": "ActiveRecord\\Utils::add_condition", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Utils", "fromLink": "ActiveRecord/Utils.html", "link": "ActiveRecord/Utils.html#method_human_attribute", "name": "ActiveRecord\\Utils::human_attribute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Utils", "fromLink": "ActiveRecord/Utils.html", "link": "ActiveRecord/Utils.html#method_is_odd", "name": "ActiveRecord\\Utils::is_odd", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Utils", "fromLink": "ActiveRecord/Utils.html", "link": "ActiveRecord/Utils.html#method_is_a", "name": "ActiveRecord\\Utils::is_a", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Utils", "fromLink": "ActiveRecord/Utils.html", "link": "ActiveRecord/Utils.html#method_is_blank", "name": "ActiveRecord\\Utils::is_blank", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Utils", "fromLink": "ActiveRecord/Utils.html", "link": "ActiveRecord/Utils.html#method_pluralize", "name": "ActiveRecord\\Utils::pluralize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Utils", "fromLink": "ActiveRecord/Utils.html", "link": "ActiveRecord/Utils.html#method_singularize", "name": "ActiveRecord\\Utils::singularize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Utils", "fromLink": "ActiveRecord/Utils.html", "link": "ActiveRecord/Utils.html#method_pluralize_if", "name": "ActiveRecord\\Utils::pluralize_if", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Utils", "fromLink": "ActiveRecord/Utils.html", "link": "ActiveRecord/Utils.html#method_squeeze", "name": "ActiveRecord\\Utils::squeeze", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Utils", "fromLink": "ActiveRecord/Utils.html", "link": "ActiveRecord/Utils.html#method_add_irregular", "name": "ActiveRecord\\Utils::add_irregular", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/Validations.html", "name": "ActiveRecord\\Validations", "doc": "&quot;Manages validations for a {@link Model}.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method___construct", "name": "ActiveRecord\\Validations::__construct", "doc": "&quot;Constructs a {@link Validations} object.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_get_record", "name": "ActiveRecord\\Validations::get_record", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_rules", "name": "ActiveRecord\\Validations::rules", "doc": "&quot;Returns validator data.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_validate", "name": "ActiveRecord\\Validations::validate", "doc": "&quot;Runs the validators.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_validates_presence_of", "name": "ActiveRecord\\Validations::validates_presence_of", "doc": "&quot;Validates a field is not null and not blank.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_validates_inclusion_of", "name": "ActiveRecord\\Validations::validates_inclusion_of", "doc": "&quot;Validates that a value is included the specified array.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_validates_exclusion_of", "name": "ActiveRecord\\Validations::validates_exclusion_of", "doc": "&quot;This is the opposite of {@link validates_include_of}.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_validates_inclusion_or_exclusion_of", "name": "ActiveRecord\\Validations::validates_inclusion_or_exclusion_of", "doc": "&quot;Validates that a value is in or out of a specified list of values.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_validates_numericality_of", "name": "ActiveRecord\\Validations::validates_numericality_of", "doc": "&quot;Validates that a value is numeric.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_validates_size_of", "name": "ActiveRecord\\Validations::validates_size_of", "doc": "&quot;Alias of {@link validates_length_of}&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_validates_format_of", "name": "ActiveRecord\\Validations::validates_format_of", "doc": "&quot;Validates that a value is matches a regex.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_validates_length_of", "name": "ActiveRecord\\Validations::validates_length_of", "doc": "&quot;Validates the length of a value.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\Validations", "fromLink": "ActiveRecord/Validations.html", "link": "ActiveRecord/Validations.html#method_validates_uniqueness_of", "name": "ActiveRecord\\Validations::validates_uniqueness_of", "doc": "&quot;Validates the uniqueness of a value.&quot;"},
            
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/ValidationsArgumentError.html", "name": "ActiveRecord\\ValidationsArgumentError", "doc": "&quot;Thrown for validations exceptions.&quot;"},
                    
            {"type": "Class", "fromName": "ActiveRecord", "fromLink": "ActiveRecord.html", "link": "ActiveRecord/XmlSerializer.html", "name": "ActiveRecord\\XmlSerializer", "doc": "&quot;XML serializer.&quot;"},
                                                        {"type": "Method", "fromName": "ActiveRecord\\XmlSerializer", "fromLink": "ActiveRecord/XmlSerializer.html", "link": "ActiveRecord/XmlSerializer.html#method___construct", "name": "ActiveRecord\\XmlSerializer::__construct", "doc": "&quot;Constructs a {@link Serialization} object.&quot;"},
                    {"type": "Method", "fromName": "ActiveRecord\\XmlSerializer", "fromLink": "ActiveRecord/XmlSerializer.html", "link": "ActiveRecord/XmlSerializer.html#method_to_s", "name": "ActiveRecord\\XmlSerializer::to_s", "doc": "&quot;Performs the serialization.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


